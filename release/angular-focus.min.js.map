{"version":3,"sources":["focus.service.js"],"names":["angular","module","timeout","$timeout","$window","$log","element","getElementById","document","ensureFocusable","setAttribute","toString","getSelection","setSelectionRange"],"mappings":"uOAKAA,eAMEC,OAAO,4BAKHC,UAAU,WAAA,UAAA,OAAA,SAAAC,EAAAC,EAAAC,4BAIG,kBAANH,8BAYLI,GAA2BC,iBAATC,GAAwBF,iBAAAA,IAAAA,EAAAA,YAAAA,QAAAA,4DAKxB,iBAAlBA,oCAKAA,QAAqB,IAAjBG,EAAiB,OACXC,EAAAA,IAIRJ,GAA4BK,mBAAfC,EAAAA,QACXN,2CAILJ,GAAWI,EAAAO","file":"angular-focus.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Focus.Service', [])\n\n/**\n * Service definition\n */\n.factory('$focus', function($timeout, $window, $log) {\n  return function(element, timeout, ensureFocusable, selectText) {\n\n    //Parameter juggling\n    if (typeof timeout === 'boolean') {\n      selectText = timeout;\n      timeout = 0;\n    }\n\n    //Run after timeout\n    $timeout(() => {\n\n      //Invalid input\n      if (\n        !element ||\n        (typeof element !== 'string' && typeof element !== 'object')\n      ) {\n        return $log.warn('Invalid element supplied for $focus:', element);\n      }\n\n      //String ID\n      if (typeof element === 'string') {\n        element = $window.document.getElementById(element);\n      }\n\n      //jQuery element\n      if (element && typeof element[0] !== 'undefined') {\n        element = element[0];\n      }\n\n      //HTML DOM element\n      if (element && typeof element.focus === 'function') {\n        if (ensureFocusable) {\n          element.setAttribute('tabindex', -1);\n        }\n        element.focus();\n        if (selectText && element.setSelectionRange) {\n          if (!$window.getSelection().toString()) {\n            element.setSelectionRange(0, element.value.length);\n          }\n        }\n      }\n    }, timeout || 0);\n  };\n});\n\n})(window, window.angular);\n"]}